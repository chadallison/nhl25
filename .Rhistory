ggplot(aes(reorder(player, dg_index), dg_index)) +
geom_col(aes(fill = tour), show.legend = T) +
geom_text(aes(label = round(dg_index, 2)), size = 3, hjust = -0.25) +
scale_fill_manual(values = c("#617861", "#bf8383")) +
coord_flip(ylim = c(0, max(dg$dg_index) * 1.025)) +
scale_y_continuous(breaks = seq(0, 5, by = 0.25)) +
labs(x = NULL, y = "DG Index", fill = NULL,
title = glue("Data Golf Top 25 as of {today_nice}")) +
theme(legend.position = "right")
sort(unique(c(games_df$home_team, games_df$away_team)))
all_teams = sort(unique(c(games_df$home_team, games_df$away_team)))
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
return(round(mean(c(home, away)), 3))
}
get_team_gapg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(away_score)
away = games_df |> filter(away_team == tm) |> pull(home_score)
return(round(mean(c(home, away)), 3))
}
team_gpg = data.frame(team = all_teams) |>
mutate(gspg = sapply(team, get_team_gspg),
gapg = sapply(team, get_team_gapg))
team_gpg
standings
standings |>
arrange(city_name)
team_gpg
games_df
games_df |>
inner_join(team_gpg, by = c("home_team" = "team"))
games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg)
games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg) |>
mutate(home_exp = (home_gspg + away_gapg) / 2,
away_exp = (away_gspg + home_gapg) / 2,
home_off_npr = home_score - home_exp,
home_def_npr = away_exp - away_score,
away_off_npr = away_score - away_exp,
away_def_npr = home_exp - home_score)
end_npr = games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg) |>
mutate(home_exp = (home_gspg + away_gapg) / 2,
away_exp = (away_gspg + home_gapg) / 2,
home_off_npr = home_score - home_exp,
home_def_npr = away_exp - away_score,
away_off_npr = away_score - away_exp,
away_def_npr = home_exp - home_score)
all_teams = sort(unique(c(games_df$home_team, games_df$away_team)))
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
return(round(mean(c(home, away)), 3))
}
get_team_gapg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(away_score)
away = games_df |> filter(away_team == tm) |> pull(home_score)
return(round(mean(c(home, away)), 3))
}
team_gpg = data.frame(team = all_teams) |>
mutate(gspg = sapply(team, get_team_gspg),
gapg = sapply(team, get_team_gapg))
end_npr = games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg) |>
mutate(home_exp = (home_gspg + away_gapg) / 2,
away_exp = (away_gspg + home_gapg) / 2,
home_off_npr = home_score - home_exp,
home_def_npr = away_exp - away_score,
away_off_npr = away_score - away_exp,
away_def_npr = home_exp - home_score)
get_team_off_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_off_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_off_npr)
return(round(mean(c(home, away)), 3))
}
get_team_def_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_def_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_def_npr)
return(round(mean(c(home, away)), 3))
}
team_npr = data.frame(team = all_teams) |>
mutate(off_npr = sapply(team, get_team_off_npr),
def_npr = sapply(team, get_team_def_npr),
ovr_npr = off_npr + def_npr)
team_npr
team_npr |>
arrange(desc(ovr_npr))
standings
team_npr |>
inner_join(standings, by = c("team" = "team_abbr"))
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), show.legend = F) +
ggrepel::geom_text_repel(aes(label = team))
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32)
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed")
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5)
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5)
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex)
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team points vs. NPR")
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team points vs. NPR",
subtitle = "NPR = Naive Performance Rating, a pseudo-power ranking I developed")
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team points vs. NPR",
subtitle = "NPR = Naive Performance Rating")
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team Points vs. NPR",
subtitle = "NPR = Naive Performance Rating") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(-1, 1, by = 0.1))
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team Points vs. NPR",
subtitle = "Teams above/below line are better/worse than their record suggests") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(-1, 1, by = 0.1))
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "loess", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team Points vs. NPR",
subtitle = "Teams above/below line are better/worse than their record suggests") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(-1, 1, by = 0.1))
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team Points vs. NPR",
subtitle = "Teams above/below line are better/worse than their record suggests") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(-1, 1, by = 0.1))
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team Points vs. NPR",
subtitle = "Teams above/below line are better/worse than their record suggests") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(-1, 1, by = 0.1))
team_npr
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32)
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5)
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline()
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25)
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-1, 1, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05))
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05))
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
labs(x = "Offensive NPR", y = "Defensive NPR",
title = "Team Offensive/Defensive NPR",
subtitle = "Teams above/below diagonal line are better/worse defensively")
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Offensive NPR", y = "Defensive NPR",
title = "Team Offensive/Defensive NPR",
subtitle = "Teams above/below diagonal line are better defensively/offensively")
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
all = c(home, away)
g_mean = mean(all)
g_sd = sd(all)
all = all[all <= g_mean + g_sd & all >= g_mean - g_sd]
return(round(mean(all), 3)))
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
all = c(home, away)
g_mean = mean(all)
g_sd = sd(all)
all = all[all <= g_mean + g_sd & all >= g_mean - g_sd]
return(round(mean(all), 3))
# return(round(mean(c(home, away)), 3))
}
all_teams = sort(unique(c(games_df$home_team, games_df$away_team)))
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
all = c(home, away)
g_mean = mean(all)
g_sd = sd(all)
all = all[all <= g_mean + g_sd & all >= g_mean - g_sd]
return(round(mean(all), 3))
# return(round(mean(c(home, away)), 3))
}
get_team_gapg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(away_score)
away = games_df |> filter(away_team == tm) |> pull(home_score)
return(round(mean(c(home, away)), 3))
}
team_gpg = data.frame(team = all_teams) |>
mutate(gspg = sapply(team, get_team_gspg),
gapg = sapply(team, get_team_gapg))
end_npr = games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg) |>
mutate(home_exp = (home_gspg + away_gapg) / 2,
away_exp = (away_gspg + home_gapg) / 2,
home_off_npr = home_score - home_exp,
home_def_npr = away_exp - away_score,
away_off_npr = away_score - away_exp,
away_def_npr = home_exp - home_score)
get_team_off_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_off_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_off_npr)
return(round(mean(c(home, away)), 3))
}
get_team_def_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_def_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_def_npr)
return(round(mean(c(home, away)), 3))
}
team_npr = data.frame(team = all_teams) |>
mutate(off_npr = sapply(team, get_team_off_npr),
def_npr = sapply(team, get_team_def_npr),
ovr_npr = off_npr + def_npr)
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Offensive NPR", y = "Defensive NPR",
title = "Team Offensive/Defensive NPR",
subtitle = "Teams above/below diagonal line are better defensively/offensively")
team_gpg
all_teams = sort(unique(c(games_df$home_team, games_df$away_team)))
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
all = c(home, away)
g_mean = mean(all)
g_sd = sd(all)
all = all[all <= g_mean + g_sd * 2 & all >= g_mean - g_sd * 2]
return(round(mean(all), 3))
# return(round(mean(c(home, away)), 3))
}
get_team_gapg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(away_score)
away = games_df |> filter(away_team == tm) |> pull(home_score)
all = c(home, away)
g_mean = mean(all)
g_sd = sd(all)
all = all[all <= g_mean + g_sd * 2 & all >= g_mean - g_sd * 2]
return(round(mean(all), 3))
# return(round(mean(c(home, away)), 3))
}
team_gpg = data.frame(team = all_teams) |>
mutate(gspg = sapply(team, get_team_gspg),
gapg = sapply(team, get_team_gapg))
end_npr = games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg) |>
mutate(home_exp = (home_gspg + away_gapg) / 2,
away_exp = (away_gspg + home_gapg) / 2,
home_off_npr = home_score - home_exp,
home_def_npr = away_exp - away_score,
away_off_npr = away_score - away_exp,
away_def_npr = home_exp - home_score)
get_team_off_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_off_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_off_npr)
return(round(mean(c(home, away)), 3))
}
get_team_def_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_def_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_def_npr)
return(round(mean(c(home, away)), 3))
}
team_npr = data.frame(team = all_teams) |>
mutate(off_npr = sapply(team, get_team_off_npr),
def_npr = sapply(team, get_team_def_npr),
ovr_npr = off_npr + def_npr)
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Offensive NPR", y = "Defensive NPR",
title = "Team Offensive/Defensive NPR",
subtitle = "Teams above/below diagonal line are better defensively/offensively")
team_npr |>
inner_join(standings, by = c("team" = "team_abbr")) |>
ggplot(aes(points, ovr_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_line(stat = "smooth", formula = y ~ x, method = "lm", linetype = "dashed", alpha = 0.5) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Points", y = "NPR", title = "Team Points vs. NPR",
subtitle = "Teams above/below line are better/worse than their record suggests") +
scale_x_continuous(breaks = seq(0, 100, by = 5)) +
scale_y_continuous(breaks = seq(-1, 1, by = 0.1))
# as of Jan 1 2025
ppg = data.frame(player_name = c("Michael Jordan", "LeBron James"),
career_ppg = c(30.1, 27.1)) |>
mutate(player_name = factor(player_name, levels = c("Michael Jordan", "LeBron James")))
ppg |>
ggplot(aes(player_name, career_ppg)) +
geom_col(fill = "#0f62fe") +
labs(x = NULL, y = "Career Points per Game",
title = "Michael Jordan vs. LeBron James",
caption = "As of January 1, 2025") # + coord_cartesian(ylim = c(27, 31))
all_teams = sort(unique(c(games_df$home_team, games_df$away_team)))
get_team_gspg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(home_score)
away = games_df |> filter(away_team == tm) |> pull(away_score)
return(round(mean(c(home, away)), 3))
}
get_team_gapg = function(tm) {
home = games_df |> filter(home_team == tm) |> pull(away_score)
away = games_df |> filter(away_team == tm) |> pull(home_score)
return(round(mean(c(home, away)), 3))
}
team_gpg = data.frame(team = all_teams) |>
mutate(gspg = sapply(team, get_team_gspg),
gapg = sapply(team, get_team_gapg))
end_npr = games_df |>
inner_join(team_gpg, by = c("home_team" = "team")) |>
rename(home_gspg = gspg, home_gapg = gapg) |>
inner_join(team_gpg, by = c("away_team" = "team")) |>
rename(away_gspg = gspg, away_gapg = gapg) |>
mutate(home_exp = (home_gspg + away_gapg) / 2,
away_exp = (away_gspg + home_gapg) / 2,
home_off_npr = home_score - home_exp,
home_def_npr = away_exp - away_score,
away_off_npr = away_score - away_exp,
away_def_npr = home_exp - home_score)
get_team_off_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_off_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_off_npr)
return(round(mean(c(home, away)), 3))
}
get_team_def_npr = function(tm) {
home = end_npr |> filter(home_team == tm) |> pull(home_def_npr)
away = end_npr |> filter(away_team == tm) |> pull(away_def_npr)
return(round(mean(c(home, away)), 3))
}
team_npr = data.frame(team = all_teams) |>
mutate(off_npr = sapply(team, get_team_off_npr),
def_npr = sapply(team, get_team_def_npr),
ovr_npr = off_npr + def_npr)
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Offensive NPR", y = "Defensive NPR",
title = "Team Offensive/Defensive NPR",
subtitle = "Teams above/below diagonal line are better defensively/offensively")
team_npr |>
ggplot(aes(off_npr, def_npr)) +
geom_point(aes(col = team), shape = "square", size = 4, show.legend = F) +
ggrepel::geom_text_repel(aes(label = team), size = 3, max.overlaps = 32) +
geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
geom_abline(linetype = "dashed", alpha = 0.25) +
scale_x_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_y_continuous(breaks = seq(-0.5, 0.5, by = 0.05)) +
scale_color_manual(values = team_hex$team_hex) +
labs(x = "Offensive NPR", y = "Defensive NPR",
title = "Team Offensive/Defensive NPR",
subtitle = "Teams above/below diagonal line are better defensively/offensively")
